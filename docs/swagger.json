{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is bioos apiserver using Hertz.",
        "title": "BioOS Apiserver",
        "contact": {
            "name": "hertz-contrib",
            "url": "https://github.com/hertz-contrib"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/.well-known/configuration": {
            "get": {
                "description": "get client configuration",
                "produces": [
                    "application/json"
                ],
                "summary": "use to get client configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apiserver.clientConfig"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ping",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "version Description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "version Summary",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list workspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "use to list workspaces",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query order, just like field1,field2:desc",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query searchWord",
                        "name": "searchWord",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "query exact",
                        "name": "exact",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query ids, split by comma",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListWorkspacesResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "import workspace",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "use to import workspace",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workspace mount path",
                        "name": "mountType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workspace mount type, only support nfs",
                        "name": "mountPath",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ImportWorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "create workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "use to create workspace",
                "parameters": [
                    {
                        "description": "create workspace request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateWorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{id}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "use to get workspace by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get workspace id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetWorkspaceByIdResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "delete workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "use to delete workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete workspace id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "update workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "use to update workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update workspace id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update workspace request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/notebook": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list notebook of workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook"
                ],
                "summary": "use to list notebook of workspace",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.listNotebooksResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/notebook/{name}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get notebook content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook"
                ],
                "summary": "get notebook content",
                "responses": {
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "create notebook, update if name exist, set ipynb content in http body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook"
                ],
                "summary": "use to create or update notebook",
                "parameters": [
                    {
                        "description": "ipynb content",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notebook.IPythonNotebook"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "delete notebook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook"
                ],
                "summary": "use to delete notebook",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/notebookserver": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list notebook server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook server"
                ],
                "summary": "use to list notebook server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id ",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/hertz.listResponseItem"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "create notebook server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook server"
                ],
                "summary": "use to create notebook server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id ",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "notebook server settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hertz.createRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/hertz.createResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/notebookserver/{id}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get notebook server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook server"
                ],
                "summary": "use to get notebook server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id ",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "notebook server id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "notebook object to edit",
                        "name": "notebook",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hertz.getResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "update notebook server settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook server"
                ],
                "summary": "use to update notebook server settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id ",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "notebook server id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "notebook server settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hertz.updateSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "turn notebook server on or off",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook server"
                ],
                "summary": "use to turn notebook server on or off",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id ",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "notebook server id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "turn on notebook server",
                        "name": "on",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "turn off notebook server",
                        "name": "off",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "delete notebook server",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notebook server"
                ],
                "summary": "use to delete notebook server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id ",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "notebook server id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/workflow": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list workflow of workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "use to list workflows of workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "support order field: name/createdAt, support order: asc/desc, seperated by comma, eg: createdAt:desc,name:asc",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workflow name",
                        "name": "searchWord",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "exact",
                        "name": "exact",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workspace ids seperated by comma",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.listWorkflowsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "create workflow, add workflow version if id is given",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "use to create or update workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create workflow request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.createWorkflowRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.createWorkflowResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/workflow/{id}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "get workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workflow id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.getWorkflowResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "delete workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "use to delete workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "delete workflow id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "update workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "use to update workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "update workflow id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update workflow request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.updateWorkflowRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/workflow/{workflow-id}/file": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list workflow of workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "use to list workflow files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workflow id",
                        "name": "workflow-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "list workflow files",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.listWorkflowFilesRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "support order field: version/path, support order: asc/desc, seperated by comma, eg: version:desc,path:asc",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workflow name",
                        "name": "searchWord",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workspace file ids seperated by comma",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workspace version id",
                        "name": "workflowVersionID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.listWorkflowFilesResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/workflow/{workflow-id}/file/{id}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get workflow file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "get workflow file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workflow file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workflow id",
                        "name": "workflow-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.getWorkflowFileResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/workflow/{workflow-id}/version/{id}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get workflow version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "get workflow version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workflow version id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workflow id",
                        "name": "workflow-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.getWorkflowVersionResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace-id}/workflow/{workflow-id}/versions": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list workflow verions of workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "use to list workflow versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workflow id",
                        "name": "workflow-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "support order field: source/language/status, support order: asc/desc, seperated by comma, eg: status:desc,language:asc",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workspace version ids seperated by comma",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.listWorkflowVersionsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/data_model": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list data models",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datamodel"
                ],
                "summary": "use to list data models",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "data model types",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query searchWord",
                        "name": "searchWord",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "data model ids",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListDataModelsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "patch data model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datamodel"
                ],
                "summary": "use to patch data model",
                "parameters": [
                    {
                        "description": "patch data model request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PatchDataModelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.PatchDataModelResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/data_model/{id}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "get data model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datamodel"
                ],
                "summary": "use to get data model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "get data model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetDataModelResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "delete data model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datamodel"
                ],
                "summary": "use to delete data model,support delete with data model name/row ids/headers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "get data model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "the data model headers should delete",
                        "name": "headers",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "the data model row ids should delete",
                        "name": "rowIDs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/data_model/{id}/rows": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list data model rows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datamodel"
                ],
                "summary": "use to list data model rows",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "get data model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query order, just like field1,field2:desc",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "data model entity set reffed entity row ids",
                        "name": "inSetIDs",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query searchWord",
                        "name": "searchWord",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "data model row ids",
                        "name": "rowIDs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListDataModelRowsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/data_model/{id}/rows/ids": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list all data model row ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datamodel"
                ],
                "summary": "use to list all data model row ids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "get data model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListAllDataModelRowIDsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/submission": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list submissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "use to list submissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query order, just like field1,field2:desc",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query searchWord",
                        "name": "searchWord",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "query exact",
                        "name": "exact",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "query ids",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "workflow id",
                        "name": "workflowID",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "query status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListSubmissionsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "create submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "use to create submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create submission request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateSubmissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateSubmissionResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/submission/{id}": {
            "delete": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "delete submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "use to delete submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "submission id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/submission/{id}/cancel": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "cancel submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "use to cancel submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "submission id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/submission/{name}": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "check submission name unique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "use to check submission name unique",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "submission name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/submission/{submission_id}/run": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list runs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "use to list runs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "submission id",
                        "name": "submission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query order, just like field1,field2:desc",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query searchWord",
                        "name": "searchWord",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "query ids",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "query status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListRunsResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/submission/{submission_id}/run/{id}/cancel": {
            "post": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "cancel run",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "use to cancel run",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "submission id",
                        "name": "submission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "run id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        },
        "/workspace/{workspace_id}/submission/{submission_id}/run/{run_id}/task": {
            "get": {
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "list tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "use to list tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workspace id",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "submission id",
                        "name": "submission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "run id",
                        "name": "run_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query order, just like field1,field2:desc",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListTasksResponse"
                        }
                    },
                    "400": {
                        "description": "invalid param",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    },
                    "500": {
                        "description": "internal system error",
                        "schema": {
                            "$ref": "#/definitions/errors.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiserver.clientConfig": {
            "type": "object",
            "properties": {
                "notebook": {
                    "type": "object",
                    "properties": {
                        "officialImages": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notebook.Image"
                            }
                        },
                        "resourceOptions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notebook.ResourceSize"
                            }
                        }
                    }
                },
                "storage": {
                    "type": "object",
                    "properties": {
                        "fsPath": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "errors.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_Bio-OS_bioos_internal_context_submission_interface_hertz_handlers.WorkflowVersion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "versionID": {
                    "type": "string"
                }
            }
        },
        "github_com_Bio-OS_bioos_internal_context_workspace_interface_hertz_handlers.WorkflowVersion": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkflowFileInfo"
                    }
                },
                "graph": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkflowParam"
                    }
                },
                "language": {
                    "type": "string"
                },
                "languageVersion": {
                    "type": "string"
                },
                "mainWorkflowPath": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkflowParam"
                    }
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateSubmissionRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "entity": {
                    "$ref": "#/definitions/handlers.Entity"
                },
                "exposedOptions": {
                    "$ref": "#/definitions/handlers.ExposedOptions"
                },
                "inOutMaterial": {
                    "$ref": "#/definitions/handlers.InOutMaterial"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "workflowID": {
                    "type": "string"
                },
                "workspaceID": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateSubmissionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/definitions/handlers.WorkspaceStorage"
                }
            }
        },
        "handlers.CreateWorkspaceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "handlers.DataModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rowCount": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.Entity": {
            "type": "object",
            "properties": {
                "dataModelID": {
                    "type": "string"
                },
                "dataModelRowIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inputsTemplate": {
                    "description": "* 输入配置，json 序列化后的 string\n\t  采用 json 序列化原因基于以下两点考虑：\n\t  - thrift/接口设计层面不允许 `Value` 类型不确定\n\t  - 在 inputs/outputs 层级进行序列化可使得 `bioos-server` 不处理 `Inputs`/`Outputs`(非 `this.xxx` 索引的输入) 就入库/提交给计算引擎，达到透传效果",
                    "type": "string"
                },
                "outputsTemplate": {
                    "description": "* 输出配置，json 序列化后的 string\n\t  采用 json 序列化原因基于以下两点考虑：\n\t  - thrift/接口设计层面不允许 `Value` 类型不确定\n\t  - 在 inputs/outputs 层级进行序列化可使得 `bioos-server` 不处理 `Inputs`/`Outputs`(非 `this.xxx` 索引的输入) 就入库/提交给计算引擎，达到透传效果",
                    "type": "string"
                }
            }
        },
        "handlers.ExposedOptions": {
            "type": "object",
            "properties": {
                "readFromCache": {
                    "type": "boolean"
                }
            }
        },
        "handlers.GetDataModelResponse": {
            "type": "object",
            "properties": {
                "dataModel": {
                    "$ref": "#/definitions/handlers.DataModel"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.GetWorkspaceByIdResponse": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/definitions/handlers.WorkspaceStorage"
                },
                "updateTime": {
                    "type": "integer"
                }
            }
        },
        "handlers.ImportWorkspaceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "handlers.InOutMaterial": {
            "type": "object",
            "properties": {
                "inputsMaterial": {
                    "type": "string"
                },
                "outputsMaterial": {
                    "type": "string"
                }
            }
        },
        "handlers.ListAllDataModelRowIDsResponse": {
            "type": "object",
            "properties": {
                "rowIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.ListDataModelRowsResponse": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "rows": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ListDataModelsResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.DataModel"
                    }
                }
            }
        },
        "handlers.ListRunsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.RunItem"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ListSubmissionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.SubmissionItem"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ListTasksResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TaskItem"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ListWorkspacesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkspaceItem"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.NFSWorkspaceStorage": {
            "type": "object",
            "properties": {
                "mountPath": {
                    "type": "string"
                }
            }
        },
        "handlers.PatchDataModelRequest": {
            "type": "object",
            "properties": {
                "async": {
                    "type": "boolean"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "rows": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "workspaceID": {
                    "type": "string"
                }
            }
        },
        "handlers.PatchDataModelResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "handlers.RunItem": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "engineRunID": {
                    "type": "string"
                },
                "finishTime": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "inputs": {
                    "type": "string"
                },
                "log": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "taskStatus": {
                    "$ref": "#/definitions/handlers.Status"
                }
            }
        },
        "handlers.Status": {
            "type": "object",
            "properties": {
                "cancelled": {
                    "type": "integer"
                },
                "cancelling": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "failed": {
                    "type": "integer"
                },
                "initializing": {
                    "type": "integer"
                },
                "pending": {
                    "type": "integer"
                },
                "queued": {
                    "type": "integer"
                },
                "running": {
                    "type": "integer"
                },
                "succeeded": {
                    "type": "integer"
                }
            }
        },
        "handlers.SubmissionItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "entity": {
                    "$ref": "#/definitions/handlers.Entity"
                },
                "exposedOptions": {
                    "$ref": "#/definitions/handlers.ExposedOptions"
                },
                "finishTime": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "inOutMaterial": {
                    "$ref": "#/definitions/handlers.InOutMaterial"
                },
                "name": {
                    "type": "string"
                },
                "runStatus": {
                    "$ref": "#/definitions/handlers.Status"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "workflowVersion": {
                    "$ref": "#/definitions/github_com_Bio-OS_bioos_internal_context_submission_interface_hertz_handlers.WorkflowVersion"
                }
            }
        },
        "handlers.TaskItem": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "finishTime": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "runID": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "stderr": {
                    "type": "string"
                },
                "stdout": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.WorkflowFile": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "workflowVersionID": {
                    "type": "string"
                }
            }
        },
        "handlers.WorkflowFileInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "handlers.WorkflowItem": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latestVersion": {
                    "$ref": "#/definitions/github_com_Bio-OS_bioos_internal_context_workspace_interface_hertz_handlers.WorkflowVersion"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "handlers.WorkflowParam": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "optional": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.WorkspaceItem": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/definitions/handlers.WorkspaceStorage"
                },
                "updateTime": {
                    "type": "integer"
                }
            }
        },
        "handlers.WorkspaceStorage": {
            "type": "object",
            "properties": {
                "nfs": {
                    "$ref": "#/definitions/handlers.NFSWorkspaceStorage"
                }
            }
        },
        "handlers.createWorkflowRequest": {
            "type": "object",
            "required": [
                "language",
                "mainWorkflowPath",
                "name",
                "source",
                "tag",
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "WDL"
                    ]
                },
                "mainWorkflowPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "git"
                    ]
                },
                "tag": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "workspaceID": {
                    "type": "string"
                }
            }
        },
        "handlers.createWorkflowResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "handlers.getWorkflowFileResponse": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/handlers.WorkflowFile"
                }
            }
        },
        "handlers.getWorkflowResponse": {
            "type": "object",
            "properties": {
                "workflow": {
                    "$ref": "#/definitions/handlers.WorkflowItem"
                }
            }
        },
        "handlers.getWorkflowVersionResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/definitions/github_com_Bio-OS_bioos_internal_context_workspace_interface_hertz_handlers.WorkflowVersion"
                }
            }
        },
        "handlers.listNotebooksResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.notebookItem"
                    }
                }
            }
        },
        "handlers.listWorkflowFilesRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "string"
                },
                "orderBy": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "workflowID": {
                    "type": "string"
                },
                "workflowVersionID": {
                    "type": "string"
                },
                "workspaceID": {
                    "type": "string"
                }
            }
        },
        "handlers.listWorkflowFilesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkflowFile"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "workflowID": {
                    "type": "string"
                },
                "workspaceID": {
                    "type": "string"
                }
            }
        },
        "handlers.listWorkflowVersionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Bio-OS_bioos_internal_context_workspace_interface_hertz_handlers.WorkflowVersion"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "workflowID": {
                    "type": "string"
                },
                "workspaceID": {
                    "type": "string"
                }
            }
        },
        "handlers.listWorkflowsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkflowItem"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.notebookItem": {
            "type": "object",
            "properties": {
                "contentLength": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "integer"
                }
            }
        },
        "handlers.updateWorkflowRequest": {
            "type": "object",
            "required": [
                "language",
                "source"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "WDL"
                    ]
                },
                "mainWorkflowPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "git"
                    ]
                },
                "tag": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "workspaceID": {
                    "type": "string"
                }
            }
        },
        "hertz.createRequest": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "resourceSize": {
                    "$ref": "#/definitions/notebook.ResourceSize"
                }
            }
        },
        "hertz.createResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "hertz.getResponse": {
            "type": "object",
            "properties": {
                "accessURL": {
                    "type": "string"
                },
                "createTime": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "resourceSize": {
                    "$ref": "#/definitions/notebook.ResourceSize"
                },
                "status": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "integer"
                }
            }
        },
        "hertz.listResponseItem": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "resourceSize": {
                    "$ref": "#/definitions/notebook.ResourceSize"
                },
                "status": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "integer"
                }
            }
        },
        "hertz.updateSettingsRequest": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "resourceSize": {
                    "$ref": "#/definitions/notebook.ResourceSize"
                }
            }
        },
        "notebook.GPU": {
            "type": "object",
            "properties": {
                "card": {
                    "description": "float is for mgpu",
                    "type": "number"
                },
                "memory": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                }
            }
        },
        "notebook.IPythonNotebook": {
            "type": "object",
            "required": [
                "nbformat"
            ],
            "properties": {
                "cells": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notebook.IPythonNotebookCell"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/notebook.IPythonNotebookMeta"
                },
                "nbformat": {
                    "type": "integer",
                    "minimum": 4
                },
                "nbformat_minor": {
                    "type": "integer"
                }
            }
        },
        "notebook.IPythonNotebookCell": {
            "type": "object",
            "required": [
                "cell_type"
            ],
            "properties": {
                "attachments": {
                    "type": "object",
                    "additionalProperties": true
                },
                "cell_type": {
                    "type": "string",
                    "enum": [
                        "code",
                        "markdown",
                        "raw"
                    ]
                },
                "execution_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notebook.IPythonNotebookCellOutput"
                    }
                },
                "source": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "notebook.IPythonNotebookCellOutput": {
            "type": "object",
            "required": [
                "name",
                "output_type"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "ename": {
                    "description": "In errors",
                    "type": "string"
                },
                "evalue": {
                    "type": "string"
                },
                "execute_count": {
                    "description": "in execute result; used to be pyout / prompt_number",
                    "type": "integer"
                },
                "metadata": {
                    "description": "in display data",
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "output_type": {
                    "type": "string",
                    "enum": [
                        "stream",
                        "display_data",
                        "execute_result",
                        "error"
                    ]
                },
                "text": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "traceback": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "notebook.IPythonNotebookKernelSpec": {
            "type": "object",
            "required": [
                "language",
                "name"
            ],
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "python",
                        "R"
                    ]
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "notebook.IPythonNotebookLanguageInfo": {
            "type": "object",
            "required": [
                "file_extension",
                "mimetype",
                "name",
                "version"
            ],
            "properties": {
                "file_extension": {
                    "description": "codemirror_mode in docs is string but jupyter created is {\"name\":\"ipython\",...}\nCodeMirrorMode string `json:\"codemirror_mode\"`",
                    "type": "string"
                },
                "mimetype": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "enum": [
                        "python",
                        "R"
                    ]
                },
                "pygments_lexer": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "notebook.IPythonNotebookMeta": {
            "type": "object",
            "properties": {
                "kernelspec": {
                    "$ref": "#/definitions/notebook.IPythonNotebookKernelSpec"
                },
                "language_info": {
                    "$ref": "#/definitions/notebook.IPythonNotebookLanguageInfo"
                },
                "max_cell_id": {
                    "type": "integer"
                }
            }
        },
        "notebook.Image": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "notebook.ResourceSize": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "number"
                },
                "disk": {
                    "type": "integer"
                },
                "gpu": {
                    "$ref": "#/definitions/notebook.GPU"
                },
                "memory": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    }
}